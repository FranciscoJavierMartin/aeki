meta {
  name: Product
  type: http
  seq: 2
}

get {
  url: {{baseUrl}}/products/{{productId}}
  body: json
  auth: none
}

assert {
  res.status: eq 200
  res.body.product: neq null
}

tests {
  test('product contains name', () => {
    const { product } = res.getBody();
    expect(product.name).to.be.a('string');
    expect(product.name).to.not.equal('');
  })
  
  test('product contains photoURL', () => {
    const { product } = res.getBody();
    expect(product.photoURL).to.be.a('string');
    expect(product.photoURL).to.not.equal('');
  })
  
  test('product contains price', () => {
    const { product } = res.getBody();
    expect(product.price).to.be.a('number');
    expect(product.price).to.gt(0);
  })
}
